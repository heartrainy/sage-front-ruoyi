const companyCode = /^[0-9A-Z]{18}$/
/* 整数 */
const integer = /^-?[1-9]\d*$/
/* 正整数 */
const poInteger = /^[0-9]*[1-9][0-9]*$/
/* 负整数 */
const neInteger = /^-[0-9]*[1-9][0-9]*$/
/* 浮点数 */
const float = /^(-?\d+)(\.\d+)?$/
/* 正浮点数 */
const poFloat = /^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$/
/* 负浮点数 */
const neFloat = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/
/* email地址 */
const email = /[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/
/* QQ号码 */
const qq = /[1-9][0-9]{4,}/
/* 匹配中文字符 */
const zh = /[\u4e00-\u9fa5]/
/* 匹配帐号是否合法(字母开头，允许5-10字节，允许字母数字下划线) */
const account = /^[a-zA-Z][a-zA-Z0-9_]{4,9}$/
/* 匹配空白行 */
const blankLine = /\n\s*\r/
/* 中国邮政编码 */
const postal = /[1-9]\d{5}(?!\d)/
/* 匹配身份证 */
const idCode = /^(\d{6})(\d{4})(\d{2})(\d{2})(\d{3})([0-9]|X)$/
/* 匹配IP地址 */
const ip = /((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/
/* url地址 */
const url = /[a-zA-z]+:\/\/[^\s]*/
/* 匹配首尾空白字符 */
const blankChars = /^\s*|\s*$/
/* 中国大陆手机号 (移动/联通/电信) */
const mobile = /^1(3[0-9]|4[5-9]|5[0-35-9]|66|7[013-8]|8[0-9]|9[89])\d{8}$/
/* 固定电话 */
const tel = /^(0[0-9]{2,3}\-?)?([2-9][0-9]{6,7})(\-?[0-9]{1,4})?$/

const contact = /^(1(3[0-9]|4[5-9]|5[0-35-9]|66|7[013-8]|8[0-9]|9[89])\d{8})$|^((0[0-9]{2,3}\-?)?([2-9][0-9]{6,7})(\-?[0-9]{1,4})?)$/

export {
    integer,
    poInteger,
    neInteger,
    float,
    poFloat,
    neFloat,
    email,
    qq,
    zh,
    account,
    blankLine,
    postal,
    idCode,
    ip,
    url,
    blankChars,
    mobile,
    tel,
    companyCode,
    contact
}